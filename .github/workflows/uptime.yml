#
# ===============================
# Do not edit this file directly!
# ===============================
#
# Your changes will be overwritten when the Upptime template updates (by default, weekly)
# Instead, change .upptimerc.yml configuration and the workflows will be generated accordingly.
#
# üîº Upptime @v1.40.1
# GitHub-powered open-source uptime monitor and status page by Anand Chowdhary

# * Source: https://github.com/upptime/upptime
# * Docs and more: https://upptime.js.org
# * More by Anand Chowdhary: https://anandchowdhary.com

name: Uptime CI
on:
  schedule:
    - cron: "*/5 * * * *"
  repository_dispatch:
    types: [uptime]
  workflow_dispatch:
jobs:
  release:
    name: Check status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_PAT || github.token }}
      - name: Check endpoint status
        uses: upptime/uptime-monitor@v1.40.1
        with:
          command: "update"
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Check endpoint response time
        uses: upptime/uptime-monitor@v1.40.1
        with:
          command: "response-time"
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Python deps
        run: python3 -m pip install pyyaml pynntp requests
      - name: Run NNTP check & issue cleanup
        env:
          GITHUB_TOKEN:      ${{ secrets.GH_PAT }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          UN_SERVER:         ${{ secrets.UN_SERVER }}
          UN_PORT:           ${{ secrets.UN_PORT }}
          UN_USERNAME:       ${{ secrets.UN_USERNAME }}
          UN_PASSWORD:       ${{ secrets.UN_PASSWORD }}
        run: python3 .github/workflows/scripts/un-check.py
      - name: Commit history file
        run: |
          # extract fields
          STATUS=$(grep '^status:' history/download-server.yml | awk '{print $2}')
          CODE=$(grep '^code:' history/download-server.yml | awk '{print $2}')
          RT=$(grep '^responseTime:' history/download-server.yml | awk '{print $2}')
      
          # pick emoji
          if   [ "$STATUS" = "up" ];       then EMOJI="üü©"
          elif [ "$STATUS" = "degraded" ]; then EMOJI="üü®"
          else                               EMOJI="üü•"
          fi
      
          # compose the Upptime‚Äêstyle message
          MSG="$EMOJI Download Server is $STATUS ($CODE in $RT ms) [skip ci] [upptime]"
      
          # set Git identity
          git config user.name  "Upptime Bot"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
          # commit & push
          git add history/download-server.yml
          git commit -m "$MSG" || echo "No changes to commit"
          git push
      - name: Update summary in README
        uses: upptime/uptime-monitor@v1.40.1
        with:
          command: "readme"
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
      - name: Generate graphs
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Graphs CI
          token: ${{ secrets.GH_PAT || github.token }}